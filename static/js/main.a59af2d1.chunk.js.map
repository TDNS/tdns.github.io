{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/constants.js","components/TronLinkGuide/index.js","utils/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","MAIN_TRON_API","MAIN_FOUNDATION_ADDRESS","MAIN_CONTRACT_ADDRESS","DONT_ADDRESS","MAIN_ABI","constant","inputs","name","outputs","type","payable","stateMutability","WEBSTORE_URL","logo","react_default","a","createElement","className","src","TronLinkLogo","alt","openTronLink","window","open","TronLinkGuide","props","_props$installed","installed","onClick","href","target","rel","axios","require","utils","tronWeb","contract","setTronWeb","_setTronWeb","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","this","stop","_x","apply","arguments","getData","_getData","_callee2","hash","_context2","t0","t1","sent","t2","get","call","abrupt","t3","console","error","_x2","fetchAddress","_fetchAddress","_callee3","newContract","x","address","_context3","getAddress","fromHex","_x3","theme","createMuiTheme","palette","primary","green","typography","useNextVariants","callvalue","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","validation","state","errorName","addressName","handlerChange","_ref2","event","setState","value","trim","loadingName","toString","isAddressNameFree","helperTextForName","isValid","stateOfAddressNameTextField","length","TextFormat_default","CircularProgress_default","size","Check_default","color","Warning_default","addTNS","_callee7","balance","_context7","Utils","trx","getBalance","Swal","title","text","confirmButtonText","cancelButtonText","showCancelButton","add","send","callValue","then","_ref4","_callee6","res","_context6","setTimeout","_callee5","_ref6","data","totalFee","_context5","fee","_callee4","_context4","result","titleText","preConfirm","_preConfirm","b","afterClick","catch","err","log","loggedIn","placeHolder","Promise","resolve","tronWebState","ready","_this2","tries","timer","setInterval","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","getAccount","classes","styles","TextField_default","label","variant","placeholder","required","id","fullWidth","onChange","helperText","InputProps","endAdornment","InputAdornment_default","position","aria-setsize","Icon_default","Button_default","disabled","Save_default","classNames","leftIcon","iconSmall","components_TronLinkGuide","renderWalletInfo","React","Component","withStyles","root","flexGrow","button","margin","spacing","unit","marginRight","rightIcon","marginLeft","fontSize","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.a59af2d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";","export const MAIN_TRON_API = \"https://api.trongrid.io\";\n\nexport const MAIN_FOUNDATION_ADDRESS = 'TBxZSq8sVYzHq4xVpfRodda3fEgpJMCJgG';\n\nexport const MAIN_CONTRACT_ADDRESS = 'TKvNjUuaLDpGkuNpiTAQpB4YpWfcvabPwm';\n//THPgisMAwFuqfW7tFCVQrm81X6ktVM1whi\nexport const DONT_ADDRESS = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n\nexport const MAIN_ABI = [{\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getBalance\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_feeToRegister\", \"type\": \"uint256\"}],\n    \"name\": \"updateFeeToRegister\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}, {\"name\": \"myaddress\", \"type\": \"address\"}],\n    \"name\": \"addWallet\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}],\n    \"name\": \"changeOwner\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}],\n    \"name\": \"add\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_balance\", \"type\": \"uint256\"}],\n    \"name\": \"updateBalance\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}],\n    \"name\": \"getAddress\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"address\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getSize\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"mySelfDestruct\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n}];","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={TronLinkLogo} alt='TronLink logo'/>\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if (!installed) {\n        return (\n            <div className='tronLink' onClick={openTronLink}>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n\n                        To use Tron Decentralized Name System (TDNS) you should install TronLink or login .\n                        that can be <a href={WEBSTORE_URL} target='_blank' rel='noopener noreferrer'>installed from the\n                        Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                {logo}\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={openTronLink}>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            {logo}\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","const axios = require('axios');\nconst {MAIN_ABI, MAIN_CONTRACT_ADDRESS} = require('../utils/constants');\n\nconst utils = {\n\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n\n        this.tronWeb = tronWeb;\n\n\n        this.contract = this.tronWeb.contract(MAIN_ABI, MAIN_CONTRACT_ADDRESS);\n    },\n\n    async getData(hash) {\n\n        try {\n\n            // return await axios.get('https://api.shasta.trongrid.io/wallet/gettransactioninfobyid?value=' + hash);\n            return await axios.get('https://api.trongrid.io/wallet/gettransactioninfobyid?value=' + await hash);\n\n\n        } catch (e) {\n\n            console.error(e);\n\n        }\n\n    },\n\n    async fetchAddress(name) {\n\n        const newContract = await this.tronWeb.contract(\n            MAIN_ABI, MAIN_CONTRACT_ADDRESS);\n\n        const x = await newContract.getAddress(name).call();\n        const address = this.tronWeb.address.fromHex(x);\n        return address;\n    },\n\n\n};\n\nexport default utils;","import React from 'react';\nimport TronLinkGuide from '../../components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from '../../utils';\nimport Swal from 'sweetalert2';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport Save from '@material-ui/icons/Save'\nimport classNames from 'classnames';\nimport CheckIcon from '@material-ui/icons/Check';\nimport WarningIcon from '@material-ui/icons/Warning'\n\nimport './App.scss';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\n\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextFormatIcon from '@material-ui/icons/TextFormat'\nimport {DONT_ADDRESS, MAIN_FOUNDATION_ADDRESS, MAIN_TRON_API} from \"../../utils/constants\";\n\nconst styles = theme => ({\n\n    root: {\n        flexGrow: 1,\n    },\n\n    button: {\n        margin: theme.spacing.unit,\n    },\n\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n\n    iconSmall: {\n        fontSize: 20,\n    },\n\n});\n\nconst theme = createMuiTheme({\n    palette: {\n\n        primary: green,\n    },\n    typography: {useNextVariants: true},\n});\n\nconst callvalue = 0;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            tronWeb: {\n                installed: false,\n                loggedIn: false\n            },\n\n            errorName: false,\n            isAddressNameFree: true,\n            loadingName: true,\n            isValid: false,\n\n            addressName: '',\n            helperTextForName: 'Name Is Required >> Note :Name is case sensitive.',\n            balance: 0,\n            placeHolder: '',\n            afterClick: false,\n            fee: 0\n\n\n        };\n\n\n    }\n\n\n    async componentDidMount() {\n\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if (tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if (tries >= 10) {\n\n                    //const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n                    window.TronWeb = new TronWeb(\n                        MAIN_TRON_API,\n                        MAIN_TRON_API,\n                        MAIN_TRON_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if (!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n\n            }, 200);\n        });\n\n        if (!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(MAIN_FOUNDATION_ADDRESS),\n                base58: MAIN_FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if (this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        Utils.setTronWeb(window.tronWeb);\n\n        const add = (await Utils.tronWeb.trx.getAccount()).address;\n\n        this.setState({\n            balance: await Utils.tronWeb.trx.getBalance(),\n\n            placeHolder: Utils.tronWeb.address.fromHex(add)\n\n        });\n\n\n    }\n\n\n    validation = async () => {\n\n        return await !this.state.errorName && this.state.addressName !== \"\";\n    };\n\n\n    handlerChange = async event => {\n\n\n        switch (event.target.name) {\n\n\n            case 'addressName' :\n\n                this.setState({addressName: event.target.value});\n\n                if (event.target.value !== \"\") {\n\n\n                    this.setState({addressName: event.target.value.trim()});\n                    this.setState({loadingName: true});\n\n\n                    const x = await this.getAddress(event.target.value.toString().trim());\n\n                    this.setState({loadingName: false});\n\n\n                    if (x !== DONT_ADDRESS) {\n\n                        this.setState({\n                            errorName: true,\n                            isAddressNameFree: false,\n                            helperTextForName: 'Already Taken ',\n                            isValid: false\n                        });\n\n                    } else if (this.state.addressName === \"\") {\n\n                        this.setState({errorName: false, helperTextForName: 'Name Is Required '});\n\n                    } else {\n\n                        this.setState({\n                            isAddressNameFree: true,\n                            errorName: false,\n                            helperTextForName: 'Name is  Free ',\n                            isValid: true\n                        });\n\n                    }\n                } else {\n\n                    this.setState({errorName: true, helperTextForName: 'Name Is Required', isValid: false})\n                }\n\n                break;\n\n\n            default :\n                break;\n\n        }\n\n        this.validation();\n    };\n\n\n    async getAddress(name) {\n\n        return await Utils.fetchAddress(name);\n\n    }\n\n\n    stateOfAddressNameTextField = () => {\n\n        if (this.state.addressName.length === 0) {\n\n\n            return <TextFormatIcon/>;\n\n\n        } else {\n\n            if (this.state.loadingName) {\n\n                return <CircularProgress size={28}/>\n\n            }\n            return (this.state.isAddressNameFree ? <CheckIcon color=\"primary\"/> : <WarningIcon color=\"error\"/>);\n\n        }\n\n    };\n\n\n    addTNS = async () => {\n\n        const balance = await Utils.tronWeb.trx.getBalance();\n\n        const {addressName} = this.state;\n\n\n        const sure = await Swal({\n\n            type: 'question',\n            title: 'Are you sure for Name : ' + addressName + ' ? ',\n            text: 'Cost of registration is 0 TRX plus 0.27 ~ 0.3 TRX for network fee ',\n            confirmButtonText: 'Yes',\n            cancelButtonText: 'No',\n            showCancelButton: true,\n\n\n        });\n\n        if (!sure.value) {\n\n            return;\n        }\n\n\n        if ((await balance / 1000000) < 11) {\n            Swal({\n\n                title: 'Insufficient Balance ',\n                text: 'you should have at least 11 TRX  ',\n                type: 'error'\n            });\n\n\n            return;\n        }\n\n\n        Utils.contract.add(addressName.trim()).send({\n            callValue: callvalue,\n        }).then(async res => {\n\n            setTimeout(async () => {\n                const {data} = await Utils.getData(await res);\n\n                const totalFee = (data.fee + callvalue) / 1000000;\n                this.setState({fee: totalFee});\n\n                setTimeout(async () => {\n\n                    if (data.result === \"FAILED\") {\n                        Swal({\n                            title: 'Wrong Name ',\n                            type: 'error',\n                            text: 'Fee : ' + totalFee + ' TRX'\n\n                        })\n                    } else {\n\n                        Swal({\n                            title: 'Added Name',\n                            titleText: addressName,\n                            type: 'success',\n                            text: 'Fee : ' + totalFee + ' TRX',\n                            preConfirm: async () => {\n\n\n                                this.setState({afterClick: true});\n\n                                const b = this.state.balance - (data.fee + callvalue);\n\n                                this.setState({balance: b});\n\n\n                            }\n                        })\n\n                    }\n\n                    this.setState({addressName: '', isValid: false, afterClick: false});\n\n\n                }, 100);\n\n\n            }, 2000)\n\n\n        }).catch(err => {\n\n            console.log(err);\n\n        }).then(() => {\n\n        });\n\n\n    };\n\n\n    renderWalletInfo() {\n\n        const {isValid} = this.state;\n\n        const {classes} = this.props;\n        if (!this.state.tronWeb.installed)\n            return <TronLinkGuide/>;\n\n        if (!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed/>;\n\n        return (\n\n            <div className={'messageInput'}>\n\n\n                <MuiThemeProvider theme={theme}>\n\n                    <div className=\"container\">\n\n                        <div className=\"row\">\n\n                            <div className=\"col-md-6 col-sm-6 \">\n\n                                <TextField\n                                    className=\"m-2\"\n                                    label=\"Name \"\n                                    name=\"addressName\"\n                                    variant=\"outlined\"\n                                    placeholder=\"JustinSun.tron is differ from justinsun.tron\"\n                                    required\n                                    id=\"addressName\"\n                                    fullWidth\n                                    onChange={this.handlerChange}\n                                    value={this.state.addressName}\n                                    helperText={this.state.helperTextForName}\n                                    error={this.state.errorName}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment variant=\"standard\" position=\"end\" name=\"customInput\"\n                                                            aria-setsize={28}>\n                                                <Icon color={\"inherit\"}>\n\n\n                                                    {\n                                                        // this.state.isAddressNameFree ?  <CheckIcon color=\"primary\" /> : <WarningIcon color=\"error\" />\n                                                        this.stateOfAddressNameTextField()\n\n                                                    }\n\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n\n                                />\n\n\n                            </div>\n                            <div className=\"col-md-6 col-sm-6  \">\n\n                                <small className='text-success '>\n                                    <p className=\"m-2\">\n                                        Address : {this.state.placeHolder}\n                                        <br/>\n                                        Balance : {this.state.balance / 1000000} TRX\n                                    </p>\n                                </small>\n\n\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n\n                </MuiThemeProvider>\n                <hr/>\n\n                <small className=' m-4 footer'>\n\n                    <Button name=\"tdnsSend\" variant=\"contained\" onClick={this.addTNS}\n                            className={'sendButton ' + (!!isValid ? '' : ' disabled')} size=\"small\" disabled={!isValid}>\n\n                        {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n                        <Save className={classNames(classes.leftIcon, classes.iconSmall)}/>\n                        Register\n                    </Button>\n                    <h6 className=\"text-primary ml-2  text-danger\">\n                        <small>Name is case sensitive. it means JustinSun is differ with justinsun</small>\n                    </h6>\n\n\n                </small>\n            </div>\n        );\n\n\n    }\n\n\n    render() {\n\n\n        return (<div>\n\n                <div className='kontainer'>\n                    <div className='header white'>\n                        <a href='https://tronwatch.market' target='_blank' rel='noopener noreferrer'>\n                        </a>\n                        <p className=\"text-muted\">\n                            <b> <span className=\"text-danger\">Tron</span> Decentralized Name System ( <span\n                                className=\"text-danger\">T</span>\n                                <small className=\"small\">DNS</small>\n                                ) </b>\n\n                            <br/>\n                            <span className=\"text-danger\">T</span>\n                            <small className=\"small\">DNS</small>\n                            is a DApp which allows you assign a unique, easy, memorable,readable name to your\n                            wallet\n                            address.<br/>\n\n                            <small className=\"text-info \"> For example : justinsun.tron =\n                                TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM\n                            </small>\n                            <br/>\n\n                            <small className=\"text-primary \"> then you can use <b\n                                className=\"text-danger\">justinsun.tron</b> in send form on <a\n                                href=\"https://tronwallet.network\"><b className=\"text-danger\">TronWallet </b>\n                            </a> instead of wallet address .\n                            </small>\n                            <br/>\n\n                            {/*<small className=\"text-warning\">Note : </small> <small className=\"text-success\">11 TRX is needed to be in*/}\n                            {/*your wallet to register a name</small>*/}\n\n\n                        </p>\n                    </div>\n\n                    {this.renderWalletInfo()}\n\n\n                    <div className='header white p-2'>\n\n                        <div className=\"row m-2\">\n\n                            <div className=\"col-md-6 text-muted text-justified small\">\n                                <b> How to use <span className=\"text-danger\">T</span>DNS ? </b>\n\n                                <br/>\n\n                                Install TronLink and then import or create a wallet with at least 11 TRX <br/>\n                                Enter a name in any language in <a href=\"#addressName\"> Name </a> field.<br/>\n                                For example :\n                                JustinSun.tron , JustinSun, 贾斯汀太阳 <br/>\n                                <a href=\"https://tronwallet.network\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\">TronWallet</a> supports <span\n                                className=\"text-danger\">T</span>DNS. <br/>\n\n                            </div>\n\n                            <div className=\"col-md-6 text-muted text-justified small\">\n                                <b className=\"m-1\"> Fee ? </b><br/>\n\n                                Network fee = .27 ~ .3 TRX <br/>\n\n                                Cost of using <span className=\"text-danger\">T</span>DNS = 0 TRX<br/>\n\n                                You can create multi name for your wallet address but note you can not delete name.\n\n                            </div>\n\n                        </div>\n\n                        <hr className=\"hr\"/>\n\n                        <div className=\"row\">\n\n\n                            <small className=\"ml-4 mb-2 p-1\">\n\n                                <b className=\"text-danger\"> Contact : </b>\n\n                                <a href=\"https://github.com/TDNS\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-secondary\"> Github </b>\n                                </a>\n                                <a href=\"https://discordapp.com/channels/491685925227724801/505440567488937994\"\n                                   target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-info\"> Discord </b>\n                                </a>\n                                <a href=\"https://telegram.me/gpsavad\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-primary\"> Telegram </b>\n                                </a>\n\n\n                            </small>\n\n\n                        </div>\n\n\n                    </div>\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}