{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/constants.js","components/TronLinkGuide/index.js","utils/index.js","components/bitcoin/TDNSBITCOIN.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","r","__webpack_exports__","d","MAIN_TRON_API","MAIN_FOUNDATION_ADDRESS","MAIN_CONTRACT_ADDRESS","DONT_ADDRESS","MAIN_ABI","ENABLE_BITCOIN_TDNS","DISABLE_BITCOIN_TDNS","BITCOIN_TDNS_CONTRACT","BITCOIN_ABI","constant","inputs","name","outputs","type","payable","stateMutability","WEBSTORE_URL","logo","react_default","a","createElement","className","src","TronLinkLogo","alt","openTronLink","window","open","TronLinkGuide","props","_props$installed","installed","onClick","href","target","rel","axios","require","utils","tronWeb","contract","setTronWeb","_setTronWeb","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","this","stop","_x","apply","arguments","getData","_getData","_callee2","hash","_context2","t0","t1","sent","t2","get","call","abrupt","t3","console","error","_x2","fetchAddress","_fetchAddress","_callee3","newContract","x","address","_context3","getAddress","fromHex","_x3","theme","createMuiTheme","palette","primary","green","typography","useNextVariants","BitcoinTdns","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","validation","state","errorName","addressName","length","handlerChange","_ref2","event","setState","value","trim","loadingName","toString","isAddressNameFree","helperTextForName","errorAddress","helperTextForAddress","handlerClick","stateOfAddressNameTextField","TextFormat_default","CircularProgress_default","size","Check_default","color","Warning_default","stateOfAddressTextField","Link_default","stateOfHashIdTextField","errorHashId","BlurOn_default","addTNS","_callee4","_this$state","_context4","Utils","addWallet","send","then","_ref4","res","_ref5","data","setTimeout","result","Swal","title","catch","err","log","loggedIn","isHashIdValid","isValid","isPaid","hashId","helperTextForHashId","classes","core_styles","TextField_default","label","variant","placeholder","required","id","fullWidth","onChange","helperText","InputProps","endAdornment","InputAdornment_default","position","Icon_default","Button_default","disabled","Save_default","classNames","leftIcon","iconSmall","renderWalletInfo","React","Component","withStyles","root","flexGrow","button","margin","spacing","unit","marginRight","rightIcon","marginLeft","fontSize","callvalue","App","myChange","checkedG","checked","_callee7","balance","_context7","trx","getBalance","text","confirmButtonText","cancelButtonText","showCancelButton","add","callValue","_callee6","_context6","_callee5","_ref6","totalFee","_context5","fee","titleText","preConfirm","_preConfirm","b","afterClick","renderTDNSForm","TDNSBITCOIN","placeHolder","Promise","resolve","tronWebState","ready","_this2","tries","timer","setInterval","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","getAccount","aria-setsize","components_TronLinkGuide","Checkbox_default","checkBoxRoot","&$checked","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ac1332c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";","export const MAIN_TRON_API = \"https://api.trongrid.io\";\n\nexport const MAIN_FOUNDATION_ADDRESS = 'TBxZSq8sVYzHq4xVpfRodda3fEgpJMCJgG';\n\nexport const MAIN_CONTRACT_ADDRESS = 'TKvNjUuaLDpGkuNpiTAQpB4YpWfcvabPwm';\n//THPgisMAwFuqfW7tFCVQrm81X6ktVM1whi\nexport const DONT_ADDRESS = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\n\nexport const MAIN_ABI = [{\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getBalance\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_feeToRegister\", \"type\": \"uint256\"}],\n    \"name\": \"updateFeeToRegister\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}, {\"name\": \"myaddress\", \"type\": \"address\"}],\n    \"name\": \"addWallet\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}],\n    \"name\": \"changeOwner\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}],\n    \"name\": \"add\",\n    \"outputs\": [],\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [{\"name\": \"_balance\", \"type\": \"uint256\"}],\n    \"name\": \"updateBalance\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [{\"name\": \"name\", \"type\": \"string\"}],\n    \"name\": \"getAddress\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"address\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getSize\",\n    \"outputs\": [{\"name\": \"\", \"type\": \"uint256\"}],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"mySelfDestruct\",\n    \"outputs\": [],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\"inputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\"}, {\n    \"payable\": true,\n    \"stateMutability\": \"payable\",\n    \"type\": \"fallback\"\n}];\n\n\nexport const ENABLE_BITCOIN_TDNS = \"Enable Bitcoin Wallet Address\";\nexport const DISABLE_BITCOIN_TDNS = \"Disable Bitcoin Wallet Address \";\n\n\nexport const BITCOIN_TDNS_CONTRACT = \"TMVoaBUZg5LnLw3a96JGxdDn44uHt7dgxH\" ;\n\n\nexport const BITCOIN_ABI = [{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_feeToRegister\",\"type\":\"uint256\"}],\"name\":\"updateFeeToRegister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"updateBalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"myadd\",\"type\":\"string\"}],\"name\":\"add\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mySelfDestruct\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}] ;","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\nimport './TronLinkGuide.scss';\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='logo'>\n        <img src={TronLinkLogo} alt='TronLink logo'/>\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if (!installed) {\n        return (\n            <div className='tronLink' onClick={openTronLink}>\n                <div className='info'>\n                    <h1>TronLink Required</h1>\n                    <p>\n\n                        To use Tron Decentralized Name System (TDNS) you should install TronLink or login .\n                        that can be <a href={WEBSTORE_URL} target='_blank' rel='noopener noreferrer'>installed from the\n                        Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                {logo}\n            </div>\n        );\n    }\n\n    return (\n        <div className='tronLink hover' onClick={openTronLink}>\n            <div className='info'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously-created wallet.\n                </p>\n            </div>\n            {logo}\n        </div>\n    );\n};\n\nexport default TronLinkGuide;","const axios = require('axios');\nconst {MAIN_ABI, MAIN_CONTRACT_ADDRESS} = require('../utils/constants');\n\nconst utils = {\n\n    tronWeb: false,\n    contract: false,\n\n    async setTronWeb(tronWeb) {\n\n        this.tronWeb = tronWeb;\n\n\n        this.contract = this.tronWeb.contract(MAIN_ABI, MAIN_CONTRACT_ADDRESS);\n    },\n\n    async getData(hash) {\n\n        try {\n\n            // return await axios.get('https://api.shasta.trongrid.io/wallet/gettransactioninfobyid?value=' + hash);\n            return await axios.get('https://api.trongrid.io/wallet/gettransactioninfobyid?value=' + await hash);\n\n\n        } catch (e) {\n\n            console.error(e);\n\n        }\n\n    },\n\n    async fetchAddress(name) {\n\n        const newContract = await this.tronWeb.contract(\n            MAIN_ABI, MAIN_CONTRACT_ADDRESS);\n\n        const x = await newContract.getAddress(name).call();\n        const address = this.tronWeb.address.fromHex(x);\n        return address;\n    },\n\n\n};\n\nexport default utils;","import React from 'react';\nimport Utils from '../../utils/index';\nimport Swal from 'sweetalert2';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport Save from '@material-ui/icons/Save'\nimport classNames from 'classnames';\nimport CheckIcon from '@material-ui/icons/Check';\nimport WarningIcon from '@material-ui/icons/Warning'\nimport LinkIcon from '@material-ui/icons/Link'\nimport BlurIcon from '@material-ui/icons/BlurOn'\nimport '../App/App.scss';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextFormatIcon from '@material-ui/icons/TextFormat'\nimport {DONT_ADDRESS} from \"../../utils/constants\"\n\nconst styles = theme => ({\n\n    root: {\n        flexGrow: 1,\n    },\n\n    button: {\n        margin: theme.spacing.unit,\n    },\n\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n\n    iconSmall: {\n        fontSize: 20,\n    },\n\n});\n\nconst theme = createMuiTheme({\n    palette: {\n\n        primary: green,\n    },\n    typography: {useNextVariants: true},\n});\n\n\nclass BitcoinTdns extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            tronWeb: {\n                installed: false,\n                loggedIn: false\n            },\n\n\n            errorName: false,\n            errorAddress: false,\n            errorHashId: false,\n            isAddressNameFree: true,\n            loadingName: true,\n            isHashIdValid: false,\n            isValid: false,\n            isPaid: false,\n\n            address: '',\n            addressName: '',\n            hashId: '',\n            helperTextForHashId: 'hash id is required ',\n            helperTextForName: 'address name is required',\n            helperTextForAddress: 'a valid address is required',\n\n        };\n\n\n    }\n\n    async componentDidMount() {\n\n\n    }\n\n\n    validation = async () => {\n\n\n        if (await !this.state.errorName && this.state.addressName !== \"\") {\n\n            if (this.state.address.length === 34) {\n\n                return true;\n            }\n\n\n        }\n\n        return false;\n\n\n    };\n\n    handlerChange = async event => {\n\n\n        switch (event.target.name) {\n\n\n            case 'addressName' :\n\n                this.setState({addressName: event.target.value});\n\n\n                if (event.target.value !== \"\") {\n\n                    // this.setState({ errorName: false, helperTextForName: ''});\n\n                    this.setState({addressName: event.target.value.trim()});\n                    this.setState({loadingName: true});\n\n                    const x = await this.getAddress(event.target.value.toString().trim());\n\n                    this.setState({loadingName: false});\n\n\n                    if (x !== DONT_ADDRESS) {\n\n                        this.setState({errorName: true, isAddressNameFree: false, helperTextForName: 'already taken '});\n\n                    } else if (this.state.addressName === \"\") {\n\n                        this.setState({errorName: false, helperTextForName: 'Name is required '});\n\n                    } else {\n\n                        //this.setState({isAddressNameFree: true, helperTextForName: '' , errorName: false});\n                        this.setState({isAddressNameFree: true, errorName: false, helperTextForName: 'Name is  free '});\n\n                    }\n\n                } else {\n\n                    this.setState({errorName: true, helperTextForName: 'Name is required '})\n                }\n\n                break;\n\n\n            case 'address' :\n\n\n                this.setState({'address': event.target.value});\n\n\n                //&& event.target.value !== \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"\n                if ((event.target.value.length === 34 || event.target.value.length === 0)) {\n\n                    this.setState({errorAddress: false, helperTextForAddress: ''});\n\n\n                } else {\n\n                    this.setState({errorAddress: true, helperTextForAddress: 'Invalid Tron Address'})\n\n                }\n\n\n                break;\n\n\n            default :\n                break;\n\n        }\n\n        this.validation();\n    };\n\n    handlerClick = event => {\n\n\n        switch (event.target.name) {\n\n            case 'customInput' :\n                break;\n\n            case 'tdnsSend':\n                const {addressName} = this.state.addressName;\n\n                const x = this.getAddress(addressName);\n\n\n                break;\n            default :\n\n                return;\n        }\n\n\n    };\n\n\n    async getAddress(name) {\n\n\n        return await Utils.fetchAddress(name);\n        // const x = await Utils.contract.getWallet(\"a\").call() ;\n\n    }\n\n\n    stateOfAddressNameTextField = () => {\n\n        if (this.state.addressName.length === 0) {\n\n\n            return <TextFormatIcon/>;\n\n\n        } else {\n\n            if (this.state.loadingName) {\n\n                return <CircularProgress size={26}/>\n\n            }\n            return (this.state.isAddressNameFree ? <CheckIcon color=\"primary\"/> : <WarningIcon color=\"error\"/>);\n\n        }\n\n    };\n\n    stateOfAddressTextField = () => {\n\n        if (this.state.address.length !== 34) {\n\n\n            return (!this.state.errorAddress ? <LinkIcon color=\"action\"/> : <WarningIcon color=\"error\"/>)\n\n        } else {\n\n\n            // return (!this.state.errorAddress ? <CheckIcon color=\"primary\"/> : <WarningIcon color=\"error\"/>);\n\n            return <CheckIcon color=\"primary\"/>\n        }\n\n    };\n\n    stateOfHashIdTextField = () => {\n\n        if (this.state.address.length !== 64) {\n\n\n            return (!this.state.errorHashId ? <BlurIcon color=\"action\"/> : <WarningIcon color=\"error\"/>)\n\n        } else {\n\n\n            // return (!this.state.errorAddress ? <CheckIcon color=\"primary\"/> : <WarningIcon color=\"error\"/>);\n\n            return <CheckIcon color=\"primary\"/>\n        }\n\n    };\n\n\n    addTNS = async () => {\n\n        const {addressName, address} = this.state;\n\n        //   console.log(addressName, address);\n\n        Utils.contract.addWallet(addressName.trim(), address.trim()).send().then(async res => {\n\n            const {data} = await Utils.getData(res);\n\n            setTimeout(() => {\n\n                if (data.result === \"FAILED\") {\n                    Swal({\n                        title: 'Wrong Name ',\n                        type: 'error'\n                    })\n                } else {\n                    Swal({\n                        title: 'Added Address',\n                        type: 'success'\n                    })\n                }\n\n            }, 1000)\n\n\n        }).catch(err => {\n\n            console.log(err);\n\n        }).then(() => {\n\n        });\n\n\n    };\n\n\n    renderWalletInfo() {\n\n        const {isValid} = this.state;\n\n        const {classes} = this.props;\n\n        // if (!this.state.tronWeb.installed)\n        //     return <TronLinkGuide/>;\n        //\n        //\n        // if (!this.state.tronWeb.loggedIn)\n        //     return <TronLinkGuide installed/>;\n\n        return (\n\n            <div className={'messageInput'}>\n\n\n                <MuiThemeProvider theme={theme}>\n\n                    <div className=\"container\">\n\n                        <div className=\"row\">\n\n                            <div className=\"col-md-4 col-sm-6\">\n\n                                <TextField\n                                    className=\"m-2\"\n                                    label=\"Name \"\n                                    name=\"addressName\"\n                                    variant=\"outlined\"\n                                    placeholder=\"Example: JustingSun.btc\"\n                                    required\n                                    id=\"addressName\"\n                                    fullWidth\n                                    onChange={this.handlerChange}\n                                    value={this.state.addressName}\n                                    helperText={this.state.helperTextForName}\n                                    error={this.state.errorName}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\" name=\"customInput\">\n                                                <Icon color={\"inherit\"}>\n\n                                                    {/*<CircularProgress size={30}  />*/}\n\n                                                    {\n                                                        // this.state.isAddressNameFree ?  <CheckIcon color=\"primary\" /> : <WarningIcon color=\"error\" />\n                                                        this.stateOfAddressNameTextField()\n\n                                                    }\n\n\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n\n                                />\n\n\n                            </div>\n\n                            <div className=\"col-md-8 col-sm-6\">\n\n                                <TextField\n                                    className=\"m-2\"\n                                    name=\"address\"\n                                    label=\"Address \"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"address\"\n                                    placeholder=\"Enter Wallet Address\"\n                                    required\n                                    onChange={this.handlerChange}\n                                    error={this.state.errorAddress}\n                                    helperText={this.state.helperTextForAddress}\n                                    value={this.state.address}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment variant=\"filled\" position=\"end\" name=\"customInput\">\n                                                <Icon color={\"inherit\"}>\n\n                                                    {/*<CircularProgress size={30}  />*/}\n\n                                                    {\n                                                        // this.state.isAddressNameFree ?  <CheckIcon color=\"primary\" /> : <WarningIcon color=\"error\" />\n                                                        this.stateOfAddressTextField()\n\n                                                    }\n\n\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n\n                    </div>\n\n\n                </MuiThemeProvider>\n\n\n                <hr/>\n                <div className='m-4  footer'>\n                    <Button name=\"tdnsSend\" variant=\"contained\" onClick={this.addTNS}\n                            className={'sendButton' + (!!isValid ? '' : ' disabled')} size=\"small\" disabled={!isValid}\n                    >\n\n                        {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n\n                        <Save className={classNames(classes.leftIcon, classes.iconSmall)}/>\n\n                        Registration\n\n\n                    </Button>\n\n\n                    <div className='warning small'>\n\n                    </div>\n\n                </div>\n            </div>\n        );\n\n\n    }\n\n\n    render() {\n\n        return (<div>\n\n                <div className='kontainer'>\n\n                    {this.renderWalletInfo()}\n\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(BitcoinTdns);\n","import React from 'react';\nimport TronLinkGuide from '../../components/TronLinkGuide';\nimport TronWeb from 'tronweb';\nimport Utils from '../../utils';\nimport Swal from 'sweetalert2';\nimport {createMuiTheme, MuiThemeProvider, withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport green from '@material-ui/core/colors/green';\nimport Button from '@material-ui/core/Button';\nimport Save from '@material-ui/icons/Save'\nimport classNames from 'classnames';\nimport CheckIcon from '@material-ui/icons/Check';\nimport WarningIcon from '@material-ui/icons/Warning'\n\nimport './App.scss';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Icon from \"@material-ui/core/Icon\";\nimport BitcoinTdns from \"../bitcoin/TDNSBITCOIN\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TextFormatIcon from '@material-ui/icons/TextFormat'\nimport {\n    DISABLE_BITCOIN_TDNS,\n    DONT_ADDRESS,\n    ENABLE_BITCOIN_TDNS,\n    MAIN_FOUNDATION_ADDRESS,\n    MAIN_TRON_API\n} from \"../../utils/constants\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n\n    root: {\n        flexGrow: 1,\n    },\n\n    button: {\n        margin: theme.spacing.unit,\n    },\n\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n\n    rightIcon: {\n        marginLeft: theme.spacing.unit,\n    },\n\n    iconSmall: {\n        fontSize: 20,\n    },\n    checkBoxRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500],\n        },\n\n    }\n\n});\n\nconst theme = createMuiTheme({\n    palette: {\n\n        primary: green,\n    },\n    typography: {useNextVariants: true},\n});\n\nconst callvalue = 0;\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            tronWeb: {\n                installed: false,\n                loggedIn: false\n            },\n\n            errorName: false,\n            isAddressNameFree: true,\n            loadingName: true,\n            isValid: false,\n\n            addressName: '',\n            helperTextForName: 'Name Is Required >> Note :Name is case sensitive.',\n            balance: 0,\n            placeHolder: '',\n            afterClick: false,\n            fee: 0,\n            checkedG: false,\n\n\n\n\n\n        };\n\n\n    }\n\n\n    async componentDidMount() {\n\n        await new Promise(resolve => {\n            const tronWebState = {\n                installed: !!window.tronWeb,\n                loggedIn: window.tronWeb && window.tronWeb.ready\n            };\n\n            if (tronWebState.installed) {\n                this.setState({\n                    tronWeb:\n                    tronWebState\n                });\n\n                return resolve();\n            }\n\n            let tries = 0;\n\n            const timer = setInterval(() => {\n                if (tries >= 10) {\n\n                    //const TRONGRID_API = 'https://api.shasta.trongrid.io';\n\n                    window.TronWeb = new TronWeb(\n                        MAIN_TRON_API,\n                        MAIN_TRON_API,\n                        MAIN_TRON_API\n                    );\n\n                    this.setState({\n                        tronWeb: {\n                            installed: false,\n                            loggedIn: false\n                        }\n                    });\n\n                    clearInterval(timer);\n                    return resolve();\n                }\n\n                tronWebState.installed = !!window.tronWeb;\n                tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n                if (!tronWebState.installed)\n                    return tries++;\n\n                this.setState({\n                    tronWeb: tronWebState\n                });\n\n                resolve();\n\n            }, 200);\n        });\n\n        if (!this.state.tronWeb.loggedIn) {\n            // Set default address (foundation address) used for contract calls\n            // Directly overwrites the address object as TronLink disabled the\n            // function call\n            window.tronWeb.defaultAddress = {\n                hex: window.tronWeb.address.toHex(MAIN_FOUNDATION_ADDRESS),\n                base58: MAIN_FOUNDATION_ADDRESS\n            };\n\n            window.tronWeb.on('addressChanged', () => {\n                if (this.state.tronWeb.loggedIn)\n                    return;\n\n                this.setState({\n                    tronWeb: {\n                        installed: true,\n                        loggedIn: true\n                    }\n                });\n            });\n        }\n\n        Utils.setTronWeb(window.tronWeb);\n\n        const add = (await Utils.tronWeb.trx.getAccount()).address;\n\n        this.setState({\n            balance: await Utils.tronWeb.trx.getBalance(),\n\n            placeHolder: Utils.tronWeb.address.fromHex(add)\n\n        });\n\n\n    }\n\n\n    validation = async () => {\n\n        return await !this.state.errorName && this.state.addressName !== \"\";\n    };\n\n\n    handlerChange = async event => {\n\n\n        switch (event.target.name) {\n\n\n            case 'addressName' :\n\n                this.setState({addressName: event.target.value});\n\n                if (event.target.value !== \"\") {\n\n\n                    this.setState({addressName: event.target.value.trim()});\n                    this.setState({loadingName: true});\n\n\n                    const x = await this.getAddress(event.target.value.toString().trim());\n\n                    this.setState({loadingName: false});\n\n\n                    if (x !== DONT_ADDRESS) {\n\n                        this.setState({\n                            errorName: true,\n                            isAddressNameFree: false,\n                            helperTextForName: 'Already Taken ',\n                            isValid: false\n                        });\n\n                    } else if (this.state.addressName === \"\") {\n\n                        this.setState({errorName: false, helperTextForName: 'Name Is Required '});\n\n                    } else {\n\n                        this.setState({\n                            isAddressNameFree: true,\n                            errorName: false,\n                            helperTextForName: 'Name is  Free ',\n                            isValid: true\n                        });\n\n                    }\n                } else {\n\n                    this.setState({errorName: true, helperTextForName: 'Name Is Required', isValid: false})\n                }\n\n                break;\n\n\n            default :\n                break;\n\n        }\n\n        this.validation();\n    };\n\n    myChange = event => {\n\n\n        this.setState({checkedG: event.target.checked});\n\n        if (!this.state.checkedG) {\n\n            //this.setState({errorTo: false, helperTo: 'Name is required.', sendTo: ''});\n\n\n        } else {\n\n            //this.setState({errorTo: false, helperTo: 'Address is required', sendTo: ''});\n\n\n        }\n\n\n    };\n\n\n    async getAddress(name) {\n\n        return await Utils.fetchAddress(name);\n\n    }\n\n\n    stateOfAddressNameTextField = () => {\n\n        if (this.state.addressName.length === 0) {\n\n\n            return <TextFormatIcon/>;\n\n\n        } else {\n\n            if (this.state.loadingName) {\n\n                return <CircularProgress size={28}/>\n\n            }\n            return (this.state.isAddressNameFree ? <CheckIcon color=\"primary\"/> : <WarningIcon color=\"error\"/>);\n\n        }\n\n    };\n\n\n    addTNS = async () => {\n\n        const balance = await Utils.tronWeb.trx.getBalance();\n\n        const {addressName} = this.state;\n\n\n        const sure = await Swal({\n\n            type: 'question',\n            title: 'Are you sure for Name : ' + addressName + ' ? ',\n            text: 'Cost of registration is 0 TRX plus 0.27 ~ 0.3 TRX for network fee ',\n            confirmButtonText: 'Yes',\n            cancelButtonText: 'No',\n            showCancelButton: true,\n\n\n        });\n\n        if (!sure.value) {\n\n            return;\n        }\n\n\n        if ((await balance / 1000000) < 0) {\n            Swal({\n\n                title: 'Insufficient Balance ',\n                text: 'you should have at least 11 TRX  ',\n                type: 'error'\n            });\n\n\n            return;\n        }\n\n\n        Utils.contract.add(addressName.trim()).send({\n            callValue: callvalue,\n        }).then(async res => {\n\n            setTimeout(async () => {\n                const {data} = await Utils.getData(await res);\n\n                const totalFee = (data.fee + callvalue) / 1000000;\n                this.setState({fee: totalFee});\n\n                setTimeout(async () => {\n\n                    if (data.result === \"FAILED\") {\n                        Swal({\n                            title: 'Wrong Name ',\n                            type: 'error',\n                            text: 'Fee : ' + totalFee + ' TRX'\n\n                        })\n                    } else {\n\n                        Swal({\n                            title: 'Added Name',\n                            titleText: addressName,\n                            type: 'success',\n                            text: 'Fee : ' + totalFee + ' TRX',\n                            preConfirm: async () => {\n\n\n                                this.setState({afterClick: true});\n\n                                const b = this.state.balance - (data.fee + callvalue);\n\n                                this.setState({balance: b});\n\n\n                            }\n                        })\n\n                    }\n\n                    this.setState({addressName: '', isValid: false, afterClick: false});\n\n\n                }, 100);\n\n\n            }, 2000)\n\n\n        }).catch(err => {\n\n            console.log(err);\n\n        }).then(() => {\n\n        });\n\n\n    };\n\n\n    renderWalletInfo() {\n\n        const {isValid} = this.state;\n\n        const {classes} = this.props;\n        if (!this.state.tronWeb.installed)\n            return <TronLinkGuide/>;\n\n        if (!this.state.tronWeb.loggedIn)\n            return <TronLinkGuide installed/>;\n\n        return (\n\n            <div className={'messageInput'}>\n\n\n                <MuiThemeProvider theme={theme}>\n\n                    <div className=\"container\">\n\n                        <div className=\"row\">\n\n                            <div className=\"col-md-6 col-sm-6 \">\n\n                                <TextField\n                                    className=\"m-2\"\n                                    label=\"Name \"\n                                    name=\"addressName\"\n                                    variant=\"outlined\"\n                                    placeholder=\"JustinSun.tron is differ from justinsun.tron\"\n                                    required\n                                    id=\"addressName\"\n                                    fullWidth\n                                    onChange={this.handlerChange}\n                                    value={this.state.addressName}\n                                    helperText={this.state.helperTextForName}\n                                    error={this.state.errorName}\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment variant=\"standard\" position=\"end\" name=\"customInput\"\n                                                            aria-setsize={28}>\n                                                <Icon color={\"inherit\"}>\n\n\n                                                    {\n                                                        // this.state.isAddressNameFree ?  <CheckIcon color=\"primary\" /> : <WarningIcon color=\"error\" />\n                                                        this.stateOfAddressNameTextField()\n\n                                                    }\n\n                                                </Icon>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n\n                                />\n\n\n                            </div>\n                            <div className=\"col-md-6 col-sm-6  \">\n\n                                {/*<small className='text-success '>*/}\n                                    {/*<p className=\"m-2\">*/}\n                                        {/*Address : {this.state.placeHolder}*/}\n                                        {/*<br/>*/}\n                                        {/*Balance : {this.state.balance / 1000000} TRX*/}\n                                    {/*</p>*/}\n                                {/*</small>*/}\n\n\n                            </div>\n\n                        </div>\n\n\n                    </div>\n\n\n                </MuiThemeProvider>\n                <hr/>\n\n                <small className=' m-4 footer'>\n\n                    <Button name=\"tdnsSend\" variant=\"contained\" onClick={this.addTNS}\n                            className={'sendButton ' + (!!isValid ? '' : ' disabled')} size=\"small\" disabled={!isValid}>\n\n                        {/* This Button uses a Font Icon, see the installation instructions in the docs. */}\n                        <Save className={classNames(classes.leftIcon, classes.iconSmall)}/>\n                        Register\n                    </Button>\n                    <h6 className=\"text-primary ml-2  text-danger\">\n                        <small>Name is case sensitive. it means JustinSun is differ with justinsun</small>\n                    </h6>\n\n\n                </small>\n            </div>\n        );\n\n\n    }\n\n    renderTDNSForm = () => {\n\n        if (!this.state.checkedG === false) {\n\n            return <BitcoinTdns/>;\n\n        } else {\n            return this.renderWalletInfo();\n\n        }\n\n\n    };\n\n    render() {\n\n        const {classes} = this.props;\n\n        return (<div>\n\n                <div className='kontainer'>\n                    <div className='header white'>\n                        <a href='https://tronwatch.market' target='_blank' rel='noopener noreferrer'>\n                        </a>\n                        <p className=\"text-muted\">\n                            <b> <span className=\"text-danger\">Tron</span> Decentralized Name System ( <span\n                                className=\"text-danger\">T</span>\n                                <small className=\"small\">DNS</small>\n                                ) </b>\n\n                            <br/>\n                            <span className=\"text-danger\">T</span>\n                            <small className=\"small\">DNS</small>\n                            is a DApp which allows you assign a unique, easy, memorable,readable name to your\n                            wallet\n                            address.<br/>\n\n                            <small className=\"text-info \"> For example : justinsun.tron =\n                                TXmVpin5vq5gdZsciyyjdZgKRUju4st1wM\n                            </small>\n                            <br/>\n\n                            <small className=\"text-primary \"> then you can use <b\n                                className=\"text-danger\">justinsun.tron</b> in send form on <a\n                                href=\"https://tronwallet.network\"><b className=\"text-danger\">TronWallet </b>\n                            </a> instead of wallet address .\n                            </small>\n                            <br/>\n\n                            {/*<small className=\"text-warning\">Note : </small> <small className=\"text-success\">11 TRX is needed to be in*/}\n                            {/*your wallet to register a name</small>*/}\n\n\n                        </p>\n                    </div>\n\n                    <label>\n\n                        <Checkbox\n\n                            onChange={this.myChange}\n                            value=\"checkedG\"\n                            checked={this.state.checkedG}\n                            classes={{\n\n                                root: classes.checkBoxRoot,\n                                checked: classes.checked,\n\n                            }}\n\n                        /> {!this.state.checkedG ? ENABLE_BITCOIN_TDNS : DISABLE_BITCOIN_TDNS}\n\n                    </label>\n\n\n                    {\n                        this.renderTDNSForm()\n                    }\n\n\n\n\n\n                    <div className='header white p-2'>\n\n                        <div className=\"row m-2\">\n\n                            <div className=\"col-md-6 text-muted text-justified small\">\n                                <b> How to use <span className=\"text-danger\">T</span>DNS ? </b>\n\n                                <br/>\n\n                                Install TronLink and then import or create a wallet <br/>with at least .026 TRX to register Tron wallet address<br/> and 0.8 ~ 0.9 Trx for bitcoin and other Altcoins   <br/>\n                                Enter a name in any language in <a href=\"#addressName\"> Name </a> field.<br/>\n                                For example :\n                                JustinSun.tron , JustinSun, 贾斯汀太阳 <br/>\n                                <a href=\"https://tronwallet.network\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\">TronWallet</a> supports <span\n                                className=\"text-danger\">T</span>DNS. <br/>\n\n                            </div>\n\n                            <div className=\"col-md-6 text-muted text-justified small\">\n                                <b className=\"m-1\"> Fee ? </b><br/>\n\n                                Network fee = .27 ~ .3 TRX <br/>\n\n                                Cost of using <span className=\"text-danger\">T</span>DNS = 0 TRX<br/>\n\n                                You can create multi name for your wallet address but note you can not delete name.\n\n                            </div>\n\n                        </div>\n\n                        <hr className=\"hr\"/>\n\n                        <div className=\"row\">\n\n\n                            <small className=\"ml-4 mb-2 p-1\">\n\n                                <b className=\"text-danger\"> Contact : </b>\n\n                                <a href=\"https://github.com/TDNS\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-secondary\"> Github </b>\n                                </a>\n                                <a href=\"https://discordapp.com/channels/491685925227724801/505440567488937994\"\n                                   target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-info\"> Discord </b>\n                                </a>\n                                <a href=\"https://telegram.me/gpsavad\" target=\"_blank\"\n                                   rel=\"noopener noreferrer\"> <b className=\"text-primary\"> Telegram </b>\n                                </a>\n\n\n                            </small>\n\n\n                        </div>\n\n\n                    </div>\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}